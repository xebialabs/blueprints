{{- $clusterName := .ClusterName | kebabcase}}
# Basic AKS Cluster Usage

## Notes

* This example does not create a namespace, but uses the `default` namespace
* This example creates an admin user called `adminuser` and generates that user's private key:
  * You can find the key `admin_private_key` under the XL Deploy dictionary `Environments` > `{{$clusterName}}` > `{{$clusterName}}-terraform-module-dictionary`
* You will also find the cluster API host url and access token under the same dictionary

## Deploy the blueprint to the XL Platform

To deploy this blueprint to the XebiaLabs DevOps Platform, follow the steps below:

1. Apply the generated YAML configuration using the XL CLI. Open up a terminal in the folder where you generated the configuration. Then run:

    ```plain
    xl apply -f xebialabs.yaml
    ```

2. Go to XL Deploy and look for the `{{$clusterName}}` folder under `Applications`.

3. To provision the cluster:
    1. Select `{{$clusterName}}/{{$clusterName}}/1.0.0`, click on the ellipsis and select 'Deploy'. Select `Environments/{{$clusterName}}/terraform` and click 'Continue'. Verify that there are no error messages, then click 'Deploy'.

4. After the deployment process is complete, an AKS cluster will be provisioned on Azure and a configured `K8s.master` environment will have been registered in XL Deploy.

5. In order to deploy to the K8s cluster, you can execute any K8s blueprints to generate configurations, apply those and deploy the application to your new cluster using XL Deploy.

## Undeploy the blueprint from XL Platform

To deprovision the AKS cluster, perform the above steps in reverse.

1. To deprovision the cluster:
    1. Select `Environments/{{$clusterName}}/terraform` click on the ellipsis and select 'Undeploy'. Click 'Undeploy' at the top right of the screen.
