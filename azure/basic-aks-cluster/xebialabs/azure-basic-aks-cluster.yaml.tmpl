{{$clusterName := .ClusterName | kebabcase}}

apiVersion: xl-deploy/v1
kind: Infrastructure
spec:
- name: {{ .Prefix }}{{$clusterName}}
  type: overthere.LocalHost
  os: UNIX
  children:
  - name: aks-terraform-client
    type: terraform.TerraformClient
    path: '/usr/local/bin'
    workingDirectory: '/tmp/{{ .Prefix }}{{$clusterName}}'

---

apiVersion: xl-deploy/v1
kind: Environments
spec:
- name: {{ .Prefix }}{{$clusterName}}
  type: udm.Environment
  members:
  - ~Infrastructure/{{ .Prefix }}{{$clusterName}}/aks-terraform-client

---

apiVersion: xl-deploy/v1
kind: Applications
spec:
- name: {{ .Prefix }}{{$clusterName}}
  type: udm.Application
  children:
  - name: '1.0.0'
    type: udm.DeploymentPackage
    deployables:
    - name: {{ .Prefix }}{{$clusterName}}
      type: terraform.Module
      file: !file ../terraform-azure-basic-aks-cluster
      inputVariables:
        cluster_name: {{$clusterName}}
        subscription_id: {{.SubscriptionID}}
        client_id: {{.ClientID}}
        client_secret: {{.ClientSecret}}
        tenant_id: {{.TenantID}}
        resource_group: {{.ResourceGroup}}
        resource_group_location: {{.ResourceGroupLocation}}
      boundTemplates:
      - "../{{$clusterName}} infrastructure"
      - "../{{$clusterName}} environment"
    templates:
    - name: "{{$clusterName}} infrastructure"
      type: template.k8s.Master
      instanceName: {{ .Prefix }}{{$clusterName}}
      apiServerURL: '{{"{{%outputVariables.host%}}"}}'
      token: '{{"{{%outputVariables.token%}}"}}'
      skipTLS: true
      children:
      - name: default
        type: template.k8s.Namespace
    - name: "{{$clusterName}} environment"
      type: template.udm.Environment
      instanceName: {{ .Prefix }}{{$clusterName}}
      members:
      - "../{{$clusterName}} infrastructure"
      - "../{{$clusterName}} infrastructure/default"
