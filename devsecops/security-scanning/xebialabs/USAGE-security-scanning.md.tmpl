{{$app := .AppName | kebabcase}}
## Simple security and compliance template and dashboard

Security and compliance are critical aspects of product release.
Organizations struggle to track application release status information and understand security & compliance risks across many different applications, teams, and environments. When risk assessment, security testing, and compliance checks arenâ€™t built into the Continuous Integration/Continuous Delivery (CI/CD) pipeline, releases fail and cause delays, security vulnerabilities threaten production, and IT governance violations result in expensive fines.

This blueprint provides a way to integrate tools like SonarQube, Fortify, Checkmarx, and Black Duck into release pipeline.

{{- if .ConfigureSonar }}

#### SonarQube

SonarQube is an open source platform for continuous inspection of code quality to perform automatic reviews with static analysis of code to detect bugs, code smells, and security vulnerabilities in application source code.

{{- end}}
{{- if .ConfigureFortify }}

#### Fortify SSC

Fortify Software Security Center (SSC) provides centralized management of their application security testing. Security teams use SSC to review and manage security testing activities, prioritize remediation efforts based on risk potential, measure improvements and generate cross portfolio management reports.

#### Fortify on Demand

Fortify on Demand provides software security analysis as a service. It can evaluate application code against selected security metrics.

{{- end}}
{{- if .ConfigureCheckmarx }}

#### Checkmarx

Checkmarx provides Checkmarx Static Application Security Testing (CxSAST) and Checkmarx Open Source Analysis (CxOSA). CxSAST automatically scan uncompiled code and identify security vulnerabilities. CxOSA provides a way to control and manage open source components and mitigate potential risks to the application, organizations and its users.

{{- end}}
{{- if .ConfigureBlackduck }}

### Black duck

Black Duck provides a complete open source management solution. It can identify potential security risks, license risks and operational risks for open source components.

{{- end}}

### Prerequisites

If you do not have XL Release instance running, you can use the Docker Compose setup generated by the blueprint to spin it up.
Please note that you can obtain a trial license or bring your own license for XL Release if you like. Follow the steps below to use the Docker Compose files.

    1. CD into the folder "docker" generated by the blueprint.
    2. Run `docker-compose up` on the generated `docker` folder.


To deploy this blueprint with the XebiaLabs DevOps Platform, follow the steps below:

1. Apply the generated YAML configurations using the XL CLI.

    ```
    xl apply -f xebialabs.yaml
    ```

2. Go to XL Release, look for the "{{$app}}" folder. Create release using template "{{$app}} security & compliance". Check latest status using "Security and Compliance" dashboard from "{{$app}}" folder.

## Minimum required versions

This blueprint version requires at least the following versions of the specified tools to work properly:

XL Release: Version 9.0.0
XL CLI: Version 9.0.0
