{{$clusterName := .ClusterName | kebabcase}}
## e-commerce microservice application on AWS EKS

The blueprint deploys an e-commerce microservice created using JHipster to AWS EKS.
XL Deploy does the provisioning and deployment, while XL Release orchestrates everything.

You can check a detailed tutorial for this blueprint [here](https://docs.xebialabs.com/v.9.0/xl-release/how-to/deploy-to-aws-using-blueprints)

### Prerequisites

1. Git clone [https://github.com/xebialabs/e-commerce-microservice/tree/master](https://github.com/xebialabs/e-commerce-microservice/tree/master).
2. Generate the blueprint with `xl blueprint -b aws/microservice-ecommerce` or copy the generated content to the "e-commerce-microservice" folder
3. If you do not have XL Release and XL Deploy instances running, you can use the Docker Compose setup generated by the blueprint to spin them up. The setup also contains a preconfigured Jenkins instance.
Please note that you can obtain a trial license or bring your own license for XL Release and XL Deploy if you like. Follow the steps below to use the Docker Compose files.

    1. CD into the folder "docker" generated by the blueprint.
    2. If you are using Jenkins for CI/CD please follow these additional steps
        1. Set the following environment variables before starting the docker containers

        ```
        export GITHUB_USER=<your GitHub user name>
        export GITHUB_TOKEN=<your GitHub access token, needed only if you are using a private repository, this variable can be skipped for public repositories>
        export DOCKER_USER=<your Docker user name>
        export DOCKER_PASS=<your Docker password>
        ```
        2. Replace the occurrences of `<your-dockerhub-user>` in the kubernetes `*-deployment.yml` files with your own DockerHub ID
        3. Push the cloned repository to your GitHub account so that Jenkins can checkout `https://github.com/${GITHUB_USER}/e-commerce-microservice.git`
    4. Run `docker-compose up` on the generated `docker` folder.

To deploy this blueprint with the XebiaLabs DevOps Platform, follow the steps below:

1. Apply the generated YAML configurations using the XL CLI.

    ```
    xl apply -f xebialabs.yaml
    ```

2. Go to XL Release, look for the "{{$clusterName}}-ci-cd" template, and start a new release from it.

## Minimum required versions

This blueprint version requires at least the following versions of the specified tools to work properly:

XL Release: Version 9.0.0
XL Deploy: Version 9.0.0
XL CLI: Version 9.0.0
