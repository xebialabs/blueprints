{{- $clusterName := .ClusterName | kebabcase}}
# Basic AWS Elastic Kubernetes Service (EKS) Cluster Usage

## Notes

* This example does not create a namespace, but uses the `default` namespace

## Deploy the blueprint to the XL Platform

> **Note:** Deployment of the basic AWS cluster from XL Deploy requires a few more steps than the Azure or GCP ones.

To deploy this blueprint to the XebiaLabs DevOps Platform, follow the steps below:

1. Apply the generated YAML configuration using the XL CLI. Open up a terminal in the folder where you generated the configuration. Then run:

    ```plain
    xl apply -f xebialabs.yaml
    ```

2. Go to XL Deploy and look for the `{{$clusterName}}` folder under `Applications`.

3. To provision the Lambda artifacts:
    1. Select `{{$clusterName}}/EKS-LAMBDA/{{$clusterName}}-lambda-bucket/1.0.0`, click on the ellipsis and select 'Deploy'. Select `Environments/{{$clusterName}}/aws-cloudformation-{{$clusterName}}` and click 'Continue'. Verify that there are no error messages, then click 'Deploy'.
    2. Select `{{$clusterName}}/EKS-LAMBDA/{{$clusterName}}-lambda-artifacts/1.0.0`, click on the ellipsis and select 'Deploy'. Select `Environments/{{$clusterName}}/aws-cloudformation-{{$clusterName}}` and Click 'Continue'. Verify that there are no error messages, then click 'Deploy'.

4. To provision the VPC and IAM resources:
    1. Select `{{$clusterName}}/EKS-CLOUDFORMATION/{{$clusterName}}-cloudformation-eks-user/1.0.0`, click on the ellipsis and select 'Deploy'. Select `Environments/{{$clusterName}}/aws-cloudformation-{{$clusterName}}` and click 'Continue'. Verify that there are no error messages, then click 'Deploy'.
    2. Select `{{$clusterName}}/EKS-CLOUDFORMATION/{{$clusterName}}-cloudformation-eks-vpc/1.0.0`, click on the ellipsis and select 'Deploy'. Select `Environments/{{$clusterName}}/aws-cloudformation-{{$clusterName}}` and click 'Continue'. Verify that there are no error messages, then click 'Deploy'.

5. To provision the EKS cluster:
    1. Select `{{$clusterName}}/EKS-CLOUDFORMATION/{{$clusterName}}-cloudformation-eks-master/1.0.0`, click on the ellipsis and select 'Deploy'. Select `Environments/{{$clusterName}}/aws-cloudformation-{{$clusterName}}` and click 'Continue'. Verify that there are no error messages, then click 'Deploy'.
    2. Select `{{$clusterName}}/EKS-CLOUDFORMATION/{{$clusterName}}-cloudformation-eks-workers/1.0.0`, click on the ellipsis and select 'Deploy'. Select `Environments/{{$clusterName}}/aws-cloudformation-{{$clusterName}}` and click 'Continue'. Verify that there are no error messages, then click 'Deploy'.

6. To provision the config map:
    1. Go to `Environments/{{$clusterName}}/{{$clusterName}}-master-EKSCluster-kube-system`, click on the ellipsis and select 'Edit properties'.
    2. Under the `Dictionaries` drop-down, locate `Environments/{{$clusterName}}/{{$clusterName}}-eks-workers-dictionary` and click on it.
    3. Click 'Save and close'.
    4. Select `{{$clusterName}}/EKS-CLOUDFORMATION/{{$clusterName}}-k8s-config-map/1.0.0`, click on the ellipsis and select 'Deploy'. Select `Environments/{{$clusterName}}/{{$clusterName}}-master-EKSCluster-kube-system` and click 'Continue'. Verify that there are no error messages, then click 'Deploy'.

7. After the deployment process is complete, an EKS cluster will be provisioned on AWS and a configured `K8s.master` environment will have been registered in XL Deploy.

8. In order to deploy to the K8s cluster, you can execute any K8s blueprints to generate configurations, apply those and deploy the application to your new cluster using XL Deploy.

## Undeploy the blueprint from XL Platform

To deprovision the EKS cluster, perform the above steps in reverse.

1. To deprovision the config map:
    1. Select `Environments/{{$clusterName}}/{{$clusterName}}-master-EKSCluster-kube-system/{{$clusterName}}-k8s-configmap (1.0.0)`, click on the ellipsis and select 'Undeploy'. Click 'Undeploy' at the top right of the screen.
    2. Select `Environments/{{$clusterName}}/{{$clusterName}}-master-EKSCluster-kube-system`, click on the ellipsis and select 'Edit properties'.
    3. Under the `Dictionaries` section, delete `Environments/{{$clusterName}}/{{$clusterName}}-eks-workers-dictionary`.
    4. Click 'Save and close'.

2. To deprovision the EKS cluster:
    1. Select `Environments/{{$clusterName}}/aws-cloudformation-{{$clusterName}}/{{$clusterName}}-cloudformation-eks-workers (1.0.0)`, click on the ellipsis and select 'Undeploy'. Click 'Undeploy' at the top right of the screen.
    2. Select `Environments/{{$clusterName}}/aws-cloudformation-{{$clusterName}}/{{$clusterName}}-cloudformation-eks-master (1.0.0)`, click on the ellipsis and select 'Undeploy'. Click 'Undeploy' at the top right of the screen.

3. To deprovision the VPC and IAM resources:
    1. Select `Environments/{{$clusterName}}/aws-cloudformation-{{$clusterName}}/{{$clusterName}}-cloudformation-eks-user (1.0.0)`, click on the ellipsis and select 'Undeploy'. Click 'Undeploy' at the top right of the screen.
    2. Select `Environments/{{$clusterName}}/aws-cloudformation-{{$clusterName}}/{{$clusterName}}-cloudformation-eks-vpc (1.0.0)`, click on the ellipsis and select 'Undeploy'. Click 'Undeploy' at the top right of the screen.

4. To remove the S3 storage:
    1. Select `Environments/{{$clusterName}}/aws-cloudformation-{{$clusterName}}/{{$clusterName}}-lambda-artifacts (1.0.0)`, click on the ellipsis and select 'Undeploy'. Click 'Undeploy' at the top right of the screen.
    2. Select `Environments/{{$clusterName}}/aws-cloudformation-{{$clusterName}}/{{$clusterName}}-lambda-bucket (1.0.0)`, click on the ellipsis and select 'Undeploy'. Click 'Undeploy' at the top right of the screen.

