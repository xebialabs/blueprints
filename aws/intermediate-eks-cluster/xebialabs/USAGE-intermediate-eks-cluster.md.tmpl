{{- $app := .ClusterName | kebabcase}}
## Intermediate Amazon EKS Cluster Usage

## Deploy the blueprint to the XL Platform

To deploy this blueprint to the XebiaLabs DevOps Platform, follow the steps below:

1. Apply the generated YAML configuration using the XL CLI. Open up a terminal in the folder where you generated the configuration. Then run:

    ```plain
    xl apply -f xebialabs.yaml
    ```

2. Go to XL Release and look for `{{$app}}-ci-cd` under Design and start a new release from it.

## Prerequisites

If you do not have XL Release and XL Deploy instances running, you can use the Docker Compose setup generated by the blueprint to spin them up.

> Please note that you can obtain a trial license or bring your own license for XL Release and XL Deploy if you like. Follow the steps below to use the Docker Compose files.

{{if eq .GenerateDockerComposeSetup true}}
To startup XL Release and XL Deploy:

1. CD into the `docker` folder generated by the blueprint.
2. Run `docker-compose up`.
{{end}}

{{- if .ProvisionEFS}}
## Using Amazon Elastic File System

This blueprint provisions an [Amazon Elastic File System](https://aws.amazon.com/efs/) that can be used for your Kubernetes applications.

You would need to use an EFS provisioner and storage class definitions when deploying to your Kubernetes cluster. [Here](https://medium.com/faun/aws-eks-volumes-architecture-in-a-statefull-app-in-multiple-azs-6ca1b05f80eb) is a blog article demonstrating the concept.

You can get the EFS ID from the XL Release pipeline once the provisioning is complete.
{{- end}}

