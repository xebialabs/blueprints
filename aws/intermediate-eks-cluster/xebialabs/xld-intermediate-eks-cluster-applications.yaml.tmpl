{{$app := .AppName | kebabcase}}
apiVersion: xl-deploy/v1
kind: Applications
spec:
- name: {{$app}}
  type: core.Directory
  children:
  - name: EKS-LAMBDA
    type: core.Directory
    children:
    # create S3 bucket
    - name: {{$app}}-lambda-bucket
      type: udm.Application
      children:
      - name: '1.0.0'
        type: udm.DeploymentPackage
        deployables:
        - name: s3-bucket-{{$app}}-lambda
          type: aws.s3.BucketSpec
          bucketName: {{$app}}-lambda
          region: {{.AWSRegion}}
    # upload the artifacts to S3 bucket
    - name: {{$app}}-lambda-artifacts
      type: udm.Application
      children:
      - name: '1.0.0'
        type: udm.DeploymentPackage
        deployables:
        - name: {{$app}}-lambda-artifacts
          type: aws.s3.File
          file: !file ../cloudformation-intermediate-eks-cluster/cfn-secret-provider.zip
          acl: bucket-owner-full-control
          scanPlaceholders: false
  # Provision EKS cluster using Cloudformation templates
  - name: EKS-CLOUDFORMATION
    type: core.Directory
    children:
    - name: {{$app}}-cloudformation-eks-user
      type: udm.Application
      children:
      - name: '1.0.0'
        type: udm.DeploymentPackage
        deployables:
        - name: {{$app}}-eks-user
          type: aws.cloudformation.Template
          file: !file ../cloudformation-intermediate-eks-cluster/eks-user.yaml
          capabilities:
          - CAPABILITY_IAM
          - CAPABILITY_NAMED_IAM
          inputVariables:
            ProjectName: {{$app}}
            UserStackName: {{$app}}-eks-user
            S3BucketPrefix: {{$app}}-lambda
    - name: {{$app}}-cloudformation-eks-vpc
      type: udm.Application
      children:
      - name: '1.0.0'
        type: udm.DeploymentPackage
        deployables:
        - name: {{$app}}-eks-vpc
          type: aws.cloudformation.Template
          file: !file ../cloudformation-intermediate-eks-cluster/eks-vpc.yaml
          capabilities:
          - CAPABILITY_IAM
          - CAPABILITY_NAMED_IAM
          inputVariables:
            ProjectName: {{$app}}
            VPCStackName: {{$app}}-eks-vpc
            AvailabilityZones: {{.AWSRegion}}a, {{.AWSRegion}}b
    - name: {{$app}}-cloudformation-eks-master
      type: udm.Application
      children:
      - name: '1.0.0'
        type: udm.DeploymentPackage
        deployables:
        - name: {{$app}}-eks-master
          type: aws.cloudformation.Template
          file: !file ../cloudformation-intermediate-eks-cluster/eks-master.yaml
          capabilities:
          - CAPABILITY_IAM
          - CAPABILITY_NAMED_IAM
          inputVariables:
            ProjectName: {{$app}}
            VPCStackName: {{$app}}-eks-vpc
            ClusterVersion: {{.ClusterVersion}}
    - name: {{$app}}-cloudformation-eks-workers
      type: udm.Application
      children:
      - name: '1.0.0'
        type: udm.DeploymentPackage
        deployables:
        - name: {{$app}}-eks-workers
          type: aws.cloudformation.Template
          file: !file ../cloudformation-intermediate-eks-cluster/eks-workers.yaml
          capabilities:
          - CAPABILITY_IAM
          - CAPABILITY_NAMED_IAM
          inputVariables:
            ProjectName: {{$app}}
            VPCStackName: {{$app}}-eks-vpc
            UserStackName: {{$app}}-eks-user
            ClusterStackName: {{$app}}-eks-master
            ClusterName: {{$app}}-master
            NodeGroupName: {{$app}}
            NodeInstanceType: {{.NodeInstanceType}}
            NodeAutoScalingGroupMinSize: {{.NodeAutoScalingGroupDesiredSize}}
            NodeAutoScalingGroupMaxSize: {{add .NodeAutoScalingGroupDesiredSize 1}}

    {{- if .ProvisionEFS}}
    - name: {{$app}}-cloudformation-efs
      type: udm.Application
      children:
        - name: '1.0.0'
          type: udm.DeploymentPackage
          deployables:
            - name: {{$app}}-efs
              type: aws.cloudformation.Template
              file: !file ../cloudformation-intermediate-eks-cluster/efs.yaml
              inputVariables:
                VPCStackName: {{$app}}-eks-vpc
                EnvironmentName: {{$app}}-env
    {{- end}}

    # config map used to create custom user for authentication to the EKS cluster
    - name: {{$app}}-k8s-configmap
      type: udm.Application
      children:
      - name: '1.0.0'
        type: udm.DeploymentPackage
        deployables:
        - name: {{$app}}-aws-auth
          type: k8s.ResourcesFile
          file: !file ../kubernetes-intermediate-eks-cluster/aws-auth-cm.yaml
          delimiters: "## ##"
