{{$app := .AppName | kebabcase}}
apiVersion: xl-release/v1
kind: Templates
spec:
- name: {{$app}}
  type: xlrelease.Folder
  children:
  - name: {{$app}}-ci-cd
    type: xlrelease.Release
    description: |
      This XL Release template shows how to deploy an EKS cluster using XL Deploy.
    tags:
    - AWS
    - EKS
    - {{$app}}
    scriptUsername: !value XL_RELEASE_USERNAME
    scriptUserPassword: !value XL_RELEASE_PASSWORD

    variables:
    {{- if .ProvisionEFS}}
    - type: xlrelease.StringVariable
      key: efs
      requiresValue: false
      showOnReleaseStart: false
    {{- end}}
    - type: xlrelease.StringVariable
      key: eksEndpoint
      requiresValue: false
      showOnReleaseStart: false
    - type: xlrelease.StringVariable
      key: eksClusterName
      requiresValue: false
      showOnReleaseStart: false

    phases:
    # Provision Infra
    - name: Provision Infrastructure
      color: '#ff9e3b'
      type: xlrelease.Phase
      tasks:
      - name: Provision Lambda artifacts
        type: xlrelease.SequentialGroup
        tasks:
        - name: Create S3 bucket for lambda artifacts
          type: xldeploy.Deploy
          server: XL Deploy
          deploymentPackage: {{$app}}/EKS-LAMBDA/{{$app}}-lambda-bucket/1.0.0
          deploymentEnvironment: Environments/{{$app}}/aws-cloudformation-{{$app}}
        - name: Upload lambda artifacts to S3
          type: xldeploy.Deploy
          server: XL Deploy
          deploymentPackage: {{$app}}/EKS-LAMBDA/{{$app}}-lambda-artifacts/1.0.0
          deploymentEnvironment: Environments/{{$app}}/aws-cloudformation-{{$app}}
      - name: Provision AWS VPC and IAM resources
        type: xlrelease.ParallelGroup
        tasks:
        - name: Provision AWS IAM resources
          type: xldeploy.Deploy
          server: XL Deploy
          deploymentPackage: {{$app}}/EKS-CLOUDFORMATION/{{$app}}-cloudformation-eks-user/1.0.0
          deploymentEnvironment: Environments/{{$app}}/aws-cloudformation-{{$app}}
        - name: Provision AWS VPC
          type: xldeploy.Deploy
          server: XL Deploy
          deploymentPackage: {{$app}}/EKS-CLOUDFORMATION/{{$app}}-cloudformation-eks-vpc/1.0.0
          deploymentEnvironment: Environments/{{$app}}/aws-cloudformation-{{$app}}
      - name: Provision AWS EKS cluster
        type: xlrelease.SequentialGroup
        tasks:
        - name: Provision EKS master node
          type: xldeploy.Deploy
          server: XL Deploy
          deploymentPackage: {{$app}}/EKS-CLOUDFORMATION/{{$app}}-cloudformation-eks-master/1.0.0
          deploymentEnvironment: Environments/{{$app}}/aws-cloudformation-{{$app}}
        - name: Provision EKS workers nodes
          type: xldeploy.Deploy
          server: XL Deploy
          deploymentPackage: {{$app}}/EKS-CLOUDFORMATION/{{$app}}-cloudformation-eks-workers/1.0.0
          deploymentEnvironment: Environments/{{$app}}/aws-cloudformation-{{$app}}
        - name: Update workers dictionary for kube-system environment
          type: xld.UpdateCIProperty
          server: XL Deploy
          ciID: Environments/{{$app}}/{{$app}}-master-EKSCluster-kube-system
          ciProperty: dictionaries
          propertyValue: '[ "Environments/{{$app}}/{{$app}}-eks-workers-dictionary" ]'
        - name: Provision EKS config map for workers
          type: xldeploy.Deploy
          server: XL Deploy
          deploymentPackage: {{$app}}/EKS-CLOUDFORMATION/{{$app}}-k8s-configmap/1.0.0
          deploymentEnvironment: Environments/{{$app}}/{{$app}}-master-EKSCluster-kube-system

      {{- if .ProvisionEFS}}
      - name: Provision AWS EFS
        type: xlrelease.SequentialGroup
        tasks:
        - name: Provision EFS
          type: xldeploy.Deploy
          server: XL Deploy
          deploymentPackage: {{$app}}/EKS-CLOUDFORMATION/{{$app}}-cloudformation-efs/1.0.0
          deploymentEnvironment: Environments/{{$app}}/aws-cloudformation-{{$app}}
      - name: Get EFS ID
        type: xld.GetCIMapPropertyKey
        server: XL Deploy
        ciID: Infrastructure/{{$app}}/aws-{{$app}}/eks-cloudformation/{{$app}}-efs
        ciPropertyName: outputVariables
        ciPropertyNameKey: Filesystem
        variableMapping:
          pythonScript.ciPropertyValue: ${efs}
      {{- end}}

      - name: Get EKS Cluster name
        type: xld.GetCIMapPropertyKey
        server: XL Deploy
        ciID: Infrastructure/{{$app}}/aws-{{$app}}/eks-cloudformation/{{$app}}-eks-master
        ciPropertyName: outputVariables
        ciPropertyNameKey: ClusterName
        variableMapping:
          pythonScript.ciPropertyValue: ${eksClusterName}
      - name: Get EKS Endpoint
        type: xld.GetCIMapPropertyKey
        server: XL Deploy
        ciID: Infrastructure/{{$app}}/aws-{{$app}}/eks-cloudformation/{{$app}}-eks-master
        ciPropertyName: outputVariables
        ciPropertyNameKey: ClusterEndpoint
        variableMapping:
          pythonScript.ciPropertyValue: ${eksEndpoint}
